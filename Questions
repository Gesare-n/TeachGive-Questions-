
# Question 1: FizzBuzz

# Write a program that prints the numbers from 1 to 100. For multiples of 3, print "Fizz";
# for multiples of 5, print "Buzz"; and for numbers that are multiples of both 3 and 5,
# print "FizzBuzz".


def fizz_buzz():
    """
    Prints numbers from 1 to 100, replacing:
    - Multiples of 3 with "Fizz"
    - Multiples of 5 with "Buzz"
    - Multiples of both 3 and 5 with "FizzBuzz"
    """
    for i in range(1, 101):
        if i % 3 == 0 and i % 5 == 0:
            print("FizzBuzz")
        elif i % 3 == 0:
            print("Fizz")
        elif i % 5 == 0:
            print("Buzz")
        else:
            print(i)


# Question 2: Fibonacci Sequence
# Write a program to generate the Fibonacci sequence up to 100.


def fibonacci():
    """
    Generates the Fibonacci sequence up to 100.

    Returns:
        list: The Fibonacci sequence up to 100
    """
    fib_sequence = [0, 1]
    while fib_sequence[-1] + fib_sequence[-2] <= 100:
        fib_sequence.append(fib_sequence[-1] + fib_sequence[-2])
    return fib_sequence


# Question 3: Power of Two

# Write a program that takes an integer as input and returns true if the input is a
# power of two.


def is_power_of_two(n):
    """
    Determines if a number is a power of two.

    Args:
        n (int): The integer to check

    Returns:
        bool: True if n is a power of two, False otherwise
    """
    return n > 0 and (n & (n - 1)) == 0

# Question 4: Capitalize Words

# Write a program that accepts a string as input, capitalizes the first letter of each
# word in the string, and then returns the result string.


def capitalize_words(input_string):
    """
    Capitalizes the first letter of each word in a string.

    Args:
        input_string (str): The string to capitalize

    Returns:
        str: The string with each word capitalized
    """
    return ' '.join(word.capitalize() for word in input_string.split())


# Question 5: Reverse Integer

# Write a program that takes an integer as input and returns an integer with reversed
# digit ordering.


def reverse_integer(n):
    """
    Reverses the digits of an integer while preserving the sign.

    Args:
        n (int): The integer to reverse

    Returns:
        int: The integer with reversed digit ordering
    """
    sign = -1 if n < 0 else 1
    reversed_n = int(str(abs(n))[::-1])
    return sign * reversed_n


# Question 6: Count Vowels

# Write a program that counts the number of vowels in a sentence.


def count_vowels(sentence):
    """
    Counts the number of vowels in a string.

    Args:
        sentence (str): The string to count vowels in

    Returns:
        int: The number of vowels in the sentence
    """
    return sum(1 for char in sentence if char.lower() in "aeiou")



# Test Functions

def run_tests():
    """
    Tested  all the implemented functions with sample inputs.
    """
    print("FUNCTION TESTS")

    # FizzBuzz (partial test)
    print("\n1. FizzBuzz (first 15 numbers):")
    for i in range(1, 16):
        if i % 3 == 0 and i % 5 == 0:
            print(f"{i}: FizzBuzz")
        elif i % 3 == 0:
            print(f"{i}: Fizz")
        elif i % 5 == 0:
            print(f"{i}: Buzz")
        else:
            print(f"{i}: {i}")

    # Fibonacci
    print("\n2. Fibonacci Sequence up to 100:")
    print(fibonacci())

    # Power of Two
    print("\n3. Power of Two:")
    for num in [8, 6, 1, 16, 10]:
        print(f"is_power_of_two({num}) = {is_power_of_two(num)}")

    # Capitalize Words
    print("\n4. Capitalize Words:")
    examples = ["hi", "i love programming", "ALREADY UPPERCASE", "mixed CASE words"]
    for s in examples:
        print(f"'{s}' -> '{capitalize_words(s)}'")

    # Reverse Integer
    print("\n5. Reverse Integer:")
    for num in [500, -56, -90, 91, 1000]:
        print(f"reverse_integer({num}) = {reverse_integer(num)}")

    # Count Vowels
    print("\n6. Count Vowels:")
    examples = ["Hello World", "Python Programming", "AEIOU", "xyz"]
    for s in examples:
        print(f"'{s}' -> {count_vowels(s)} vowels")

    print("\n")


if __name__ == "__main__":
    run_tests()
